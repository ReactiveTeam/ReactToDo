/**
 * Copyright (c) 2018 PROPHESSOR
 * 
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */

export default [
    `1 Суть задания: сделать хорошо работающий Планировщик задач, основываясь на PSD макете;`,
    `2 Добавлять задачи нужно через поле сверху («Описание моей новой задачи»), длинной не более 46 символов;`,
    `3 При нажатии на кнопку «Добавить задачу» или "Enter" поле ввода должно стать пустым, а новая задача добавиться в список;`,
    `4 Сделать так, чтобы нельзя было добавить пустую задачу;`,
    `5 Новые задачи должны появляться сверху, после приоритетных;`,
    `6 Задачу можно отметить как приоритетную, нажав на звёздочку и как не приоритетную при повторном нажатии:`,
    `7 При этом, приоритетная задача должна переместиться в самый верх списка (сперва приоритетные);`,
    `8 Если задачу отметить снова как неприоритетную, она должна вернуться обратно в список неприоритетных.`,
    `9 Задачу можно отметить как выполненную, нажав на чекбокс слева, и как не выполненную при повторном нажатии:`,
    `10 При этом, задачи, отмеченные как выполненные должны перемещаться в конец списка;`,
    `11 При перемещении из выполненых обратно в не выполненные, задача должна перемещаться обратно в список не выполненных, после приоритетных (если задача не приоритетная), или в список приоритетных (если задача приоритетная).`,
    `12 Текст задачи можно редактировать, нажав на карандашик, при этом новый текст задачи должен быть не длиннее 46 символов;`,
    `13 При повтороном нажатии на карандашик, новый текст задачи должен сохраниться в состоянии, а режим редактирования выключится;`,
    `14 При нажатии на ESC текст задачи должен вернуться в исходное состояние, а режим редактирования выключиться;`,
    `15 Должен быть визуальный индикатор того, что задача в режиме редактирования (на пример, border);`,
    `16 Если задача была отмечена как сделанная, то редактировать ее уже нелья.`,
    `17 Задачу можно удалить, нажав на крестик;`,
    `18 При нажатии на чекбокс «Все задачи выполнены», все задачи должны быть отмечены как выполненные (отмечать задачи как "все не выполненные" в обратную сторону не нужно);`,
    `19 Должна быть возможность поиска задачи по ключевому слову (фильтр), вводимому в поле «Поиск»;`,
    `20 Поиск должен быть асинхронным, реализирован на клиенте с мгновенным откликом (пишешь букву, и показываемые задачи сразу отфильтроваются).`,
    `21 Сохранять состояние приложения между перезагрузками приложения (localStorage API).`,
    // `Hard mode:`,
    `22 Реализировать все операции приложения через API-инфраструктуру;`,
    `23 Данные о API хранить в контексте.`,
    // `Hell mode:`,
    `24 При добавлении и удалении задачи должны быть красиво анимированными (анимации должено быть в меру, не должно быть много и избыточно);`,
    `25 Анимировать перемещение задачи в приоритетные и обратно.`,
    // `Impossible mode:`,
    `26 Максимально и качественно покрыть приложение тестами (включая моки).`
];
